#!/bin/bash

# Set up tests for specified testing framework.
# Can copy or link the tests to their destination.

# atk_setup <tool> <do_link>
# tool    = playwright OR cypress
# do_link = "link" or blank

# ATTENTION:
# Before using this tool, set the project root directory below.
PROJECT_ROOT_DIR="web"

if [ -z "$1" ]; then
  echo "Please provide target framework (playwright OR cypress)."
  exit 1
fi

DO_LINK=0
if [ ! -z "$2" ]; then
  if [ "$2" != 'link' ]; then
    echo "Second parameter allowed to be only 'link'."
    exit 1
  fi
  DO_LINK=1
fi
 
# Check if in project root by testing for presence of package.json.
TEST_FILE="package.json"
if [[ ! -f "$TEST_FILE" ]]; then
  echo "Run this from the project root."
  exit 1
fi

# Assume this is being run from the project directory and the
# module is in the standard contrib locations.
if [ "$1" == "cypress" ]; then
  echo "Setting up for Cypress."

  TEST_SOURCE_DIR="$PROJECT_ROOT_DIR/modules/contrib/automated_testing/cypress/e2e"
  TEST_DESTINATION_DIR="cypress/e2e"

  FIXTURE_SOURCE_DIR="$PROJECT_ROOT_DIR/modules/contrib/automated_testing/fixtures"
  FIXTURE_DESTINATION_DIR="cypress/fixtures"

  SUPPORT_FILE_SOURCE_DIR="$PROJECT_ROOT_DIR/modules/contrib/automated_testing/cypress/support"
  SUPPORT_FILE_DESTINATION_DIR="cypress/support"
else
  echo "Setting up for Playwright."

  TEST_SOURCE_DIR="$PROJECT_ROOT_DIR/modules/contrib/automated_testing/playwright/e2e"
  TEST_DESTINATION_DIR="e2e"

  FIXTURE_SOURCE_DIR="$PROJECT_ROOT_DIR/modules/contrib/automated_testing/fixtures"
  FIXTURE_DESTINATION_DIR="playwright/fixtures"

  SUPPORT_FILE_SOURCE_DIR="$PROJECT_ROOT_DIR/modules/contrib/automated_testing/playwright/support"
  SUPPORT_FILE_DESTINATION_DIR="playright/support"
fi

#
# Copy ATK support files to the project root.
#

# Loop over the output of the find command looking
# for just ATK support files.
ATK_SUPPORT_FILE_SOURCE_DIR = atk_support
for SUPPORT_FILE in $(find "$ATK_SUPPORT_FILE_SOURCE_DIR" -type f); do
  SUPPORT_FILES+=("$SUPPORT_FILE")
done

echo "Support file destination directory is <project_root>."
for SUPPORT_FILE in "${SUPPORT_FILES[@]}"; do
  if (( $DO_LINK == 0 )); then
    echo "Copying $PWD/$SUPPORT_FILE."
    cp -R $FIXTURE $SUPPORT_FILE_DESTINATION_DIR
  else
    echo "Linking $PWD/$SUPPORT_FILE."
    SUPPORT_FILE_BASENAME=$(basename "$SUPPORT_FILE")
    ln -s "$PWD/$SUPPORT_FILE" "$PWD"
  fi
done

#
# Copy or link framework tests.
#

TESTS=()

# Loop over the output of the find command looking
# for just directories.
for TEST in $(find "$TEST_SOURCE_DIR" -mindepth 1 -type d); do
  TESTS+=("$TEST")
done

# Copy or link the tests.
echo "Test destination directory is <project_root>/$TEST_DESTINATION_DIR."
for TEST in "${TESTS[@]}"; do
  if (( $DO_LINK == 0 )); then
    echo "Copying $PWD/$TEST."
    # cp -R $TEST $TEST_DESTINATION_DIR
  else
    echo "Linking $PWD/$TEST."
    TEST_BASENAME=$(basename "$TEST")
    # ln -s "$PWD/$TEST" "$PWD/$TEST_DESTINATION_DIR/$TEST_BASENAME"
  fi
done

#
# Copy or link fixtures.
#

# Loop over the output of the find command looking
# for just fixtures.
for FIXTURE in $(find "$FIXTURE_SOURCE_DIR" -type f); do
  FIXTURES+=("$FIXTURE")
done

echo "Fixture destination directory is <project_root>/$FIXTURE_DESTINATION_DIR."
for FIXTURE in "${FIXTURES[@]}"; do
  if (( $DO_LINK == 0 )); then
    echo "Copying $PWD/$FIXTURE."
    # cp -R $FIXTURE $FIXTURE_DESTINATION_DIR
  else
    echo "Linking $PWD/$FIXTURE."
    TEST_BASENAME=$(basename "$FIXTURE")
    # ln -s "$PWD/$FIXTURE" "$PWD/$FIXTURE_DESTINATION_DIR/$FIXTURE_BASENAME"
  fi
done

#
# Copy or link testing framework support files.
#

# Loop over the output of the find command looking
# for just support files.
for SUPPORT_FILE in $(find "$SUPPORT_FILE_SOURCE_DIR" -type f); do
  SUPPORT_FILES+=("$SUPPORT_FILE")
done

echo "Support file destination directory is <project_root>/$SUPPORT_FILE_DESTINATION_DIR."
for SUPPORT_FILE in "${SUPPORT_FILES[@]}"; do
  if (( $DO_LINK == 0 )); then
    echo "Copying $PWD/$SUPPORT_FILE."
    cp -R $FIXTURE $SUPPORT_FILE_DESTINATION_DIR
  else
    echo "Linking $PWD/$SUPPORT_FILE."
    SUPPORT_FILE_BASENAME=$(basename "$SUPPORT_FILE")
    ln -s "$PWD/$SUPPORT_FILE" "$PWD/$SUPPORT_FILE_DESTINATION_DIR/$SUPPORT_FILE_BASENAME"
  fi
done